---

#Creating a Key Pair for EC Instance
- name: Create a new ec2 key pair
  ec2_key:
    name: ec2_keypair
    region: "{{ region }}"
  register: keypair

- name: Copy EC2 Private Key locally for SSH into the instance
  copy: content="{{ keypair.key.private_key }}" dest={{ ec2_key_directory }}key.ppk
  when: keypair.changed == true

#Creating and Launching EC2 instance
- name: Create EC2 Instance
  ec2:
    image: ami-0d03e44a2333dea65
    wait: yes
    instance_type: t2.small
    region: "{{ region }}"
    group_id: "{{ security_group.group_id }}"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    key_name: "{{ keypair.key.name  }}"
    instance_tags:
      app: jenkins
    count_tag:
      app: jenkins
    exact_count: 1
  register: ec2

- debug: var=ec2

# Task to restart the ec2 instance if in stopped state 
- name: Restart the EC2 isntance
  ec2_instance: 
    region: "{{ region }}"
    filters:
      vpc-id: "{{vpc.vpc.id}}"
    wait: yes
    state: running
  when: restart == 'true'
  register: restart

- name: Gather EC2 facts
  ec2_instance_info:
    region: "{{ region }}"
    filters:
      vpc-id : "{{vpc.vpc.id}}"
  register: ec2_info

- debug: var=ec2_info

- name: Add the newly created host so that we can further contact it
  add_host:
    name: "{{ item.public_ip_address }}"
    groups: webservers
    ansible_ssh_private_key_file:  "{{ ec2_key_location }}"
  with_items: "{{ ec2_info.instances }}"

- name: Add tag to Instance(s)
  ec2_tag:
    resource: "{{ item.instance_id }}"
    region: "{{ region }}"
    state: "present"
  with_items: "{{ ec2_info.instances }}"
  args:
    tags:
      Type: webserver

- name: Change file ownership, group and permissions
  file:
    path: "{{ ec2_key_location }}"
    mode: '600'      

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip_address }}"
    port: 22
    state: started
  with_items: "{{ ec2_info.instances }}"

- name: Route53 Create or Update subdomain value
  route53:
    state: present
    zone: "{{ hosted_zone }}"
    record: "{{ jenkins_subDomain }}"
    type: A
    ttl: 10
    value:
      - "{{ item.public_ip_address }}"
    overwrite: yes
  with_items: "{{ ec2_info.instances }}"
...